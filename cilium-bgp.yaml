# Note: may need to disable masquerading for this to work
apiVersion: cilium.io/v2alpha1
kind: CiliumBGPClusterConfig
metadata:
  name: cilium-bgp
spec:
  # nodeSelector:
  #   matchLabels:
  #     node-role.kubernetes.io/worker: worker
  bgpInstances:
  - name: "richtman.au"
    # routerID: "65551"
    localASN: 65551
    peers:
    - name: "primary-router"
      peerASN: 65551
      # Not allowed DNS names I think
      # peerAddress: home.richtman.au
      peerAddress: 2403:580a:e4b1::aab8:e0ff:fe00:91ef
      peerConfigRef:
        name: "primary-router"
---
apiVersion: cilium.io/v2alpha1
kind: CiliumBGPPeerConfig
metadata:
  name: primary-router
spec:
  # timers:
  #   holdTimeSeconds: 9
  #   keepAliveTimeSeconds: 3
  # authSecretRef: bgp-auth-secret
  # ebgpMultihop: 4
  gracefulRestart:
    enabled: true
    # restartTimeSeconds: 15
  families:
    - afi: ipv6
      safi: unicast
      advertisements:
        matchLabels:
          advertise: "bgp"
---
apiVersion: cilium.io/v2alpha1
kind: CiliumBGPAdvertisement
metadata:
  name: bgp-advertisements
  labels:
    advertise: bgp
spec:
  advertisements:
    - advertisementType: "PodCIDR"
      # attributes:
      #   communities:
      #     standard: [ "65551:99" ]
      #   localPreference: 99
    - advertisementType: "Service"
      service:
        addresses:
          - ClusterIP
          - ExternalIP
          - LoadBalancerIP
        # selector:
        #   matchExpressions:
        #     - { key: bgp, operator: In, values: [ blue ]}
    # - advertisementType: "CiliumPodIPPool"
    #   selector:
    #   matchExpressions:
    #   - {key: somekey, operator: NotIn, values: ['never-used-value']}
    # OR! ***
    #     matchLabels:
    #       advertise: "bgp"
---
apiVersion: v1
kind: Secret
metadata:
  name: bgp-auth-secret
type: Opaque
data:
  password: "YWJjZGVmMDEyMzQ1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OQ=="
